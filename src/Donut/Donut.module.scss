.block {
  text-align: center;
}

.piece {
  cursor: pointer;
}

.donut {
  pointer-events: all;
}

.piecePath {
  transition: transform var(--speed), fill var(--speed-double);
  pointer-events: bounding-box;
}

.total {
  text-anchor: middle;
  display: block;
  font-size: 1.7rem;
  align-items: center;
  transition: all var(--speed);
}

.line {
  fill: currentColor;
  stroke: currentColor;
}

.title {
  font-weight: bold;
  font-size: 1.4rem;
  line-height: 1.4em;
}

.value {
  font-size: 1.7rem;
  font-weight: bold;
  line-height: 1.2em;
}

.line,
.title,
.value {
  transition: all var(--speed);
}

.loader {
  fill: none;
  stroke: var(--gray);
  stroke-linecap: round;
  transform: scale(0.7);
  opacity: 0;
  visibility: hidden;
}

/*animation*/
.hidden {
  & .total,
  & .line,
  & .title,
  & .value {
    opacity: 0;
    visibility: hidden;
    transition: none;
  }

  & .title,
  & .value,
  & .line {
    transform: scale(0.8);
  }

  & .loader {
    transform: scale(0.7);
    transition: transform var(--speed-double);
    opacity: 1;
    visibility: visible;
  }

  & .total {
    opacity: 0;
    transform: scale(0.5);
  }

  & .piecePath {
    opacity: 0;
    visibility: hidden;
  }
}

.donut.showPieces {
  & .loader {
    display: none;
  }
  & .piecePath {
    opacity: 1;
    visibility: visible;
    animation: circle-in var(--speed-double) ease-in-out;
  }
}

// delay
@for $i from 1 through 8 {
  .delay .piece:nth-child(#{$i}) {
    & .line,
    & .value,
    & .title {
      transition-delay: calc(var(--delay-diff) * #{$i});
    }
  }
}

@keyframes circle-in {
  from {
    opacity: 1;
    transform: scale(0.7) rotate(-200deg);
    fill: var(--gray);
  }

  to {
    opacity: 1;
    transform: scale(1) rotate(-1deg);
  }
}
